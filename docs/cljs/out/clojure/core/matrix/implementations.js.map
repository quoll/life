{"version":3,"file":"\/Users\/pgearon\/dev\/public\/life\/resources\/public\/cljs\/out\/clojure\/core\/matrix\/implementations.js","sources":["implementations.cljc?rel=1526826985134"],"lineCount":234,"mappings":"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","names":["clojure.core.matrix.implementations\/KNOWN-IMPLEMENTATIONS","cljs.core\/PersistentArrayMap","clojure.core.matrix.implementations\/DEFAULT-IMPLEMENTATION","clojure.core.matrix.implementations\/*matrix-implementation*","clojure.core.matrix.implementations\/*numeric-implementation*","clojure.core.matrix.implementations\/*debug-options*","clojure.core.matrix.implementations\/canonical-objects","cljs.core\/atom","clojure.core.matrix.implementations\/get-implementation-key","m","cljs.core\/Keyword","clojure.core.matrix.protocols\/is-scalar?","clojure.core.matrix.protocols\/implementation-key","var_args","G__22080","clojure.core.matrix.implementations\/register-implementation","js\/Error","canonical-object","key","cljs.core\/ex-info","cljs.core\/type","cljs.core\/println","cljs.core\/swap!","cljs.core\/assoc","clojure.core.matrix.implementations\/try-load-implementation","k","clojure.core.matrix.implementations\/load-implementation","korm","G__22083","clojure.core.matrix.implementations\/get-canonical-object","obj","cljs.core\/deref","or__3922__auto__","clojure.core.matrix.implementations\/get-canonical-object-or-throw","mk","clojure.core.matrix.implementations\/construct","data","clojure.core.matrix.protocols\/construct-matrix","clojure.core.matrix.protocols\/coerce-param","clojure.core.matrix.implementations\/set-current-implementation"]}